// Generated by view binder compiler. Do not edit!
package com.example.servicomp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.servicomp.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final BottomNavigationView bottomNavigationView;

  @NonNull
  public final ImageView checkSeries;

  @NonNull
  public final ImageView checkSlowLaptop;

  @NonNull
  public final LinearLayout clickComputer;

  @NonNull
  public final LinearLayout clickHardisk;

  @NonNull
  public final LinearLayout clickKeyboard;

  @NonNull
  public final LinearLayout clickLaptop;

  @NonNull
  public final LinearLayout clickRam;

  @NonNull
  public final LinearLayout clickSeries;

  @NonNull
  public final LinearLayout clickSlow;

  @NonNull
  public final LinearLayout clickSmartphone;

  @NonNull
  public final LinearLayout clickTouch;

  @NonNull
  public final FrameLayout fragmentContainer;

  @NonNull
  public final ImageView hardiskCheck;

  @NonNull
  public final ImageView icLaptop;

  @NonNull
  public final ImageView icSmartphone;

  @NonNull
  public final ImageButton imageButton5;

  @NonNull
  public final ImageView imageView4;

  @NonNull
  public final ImageView keyboardCheck;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout linearLayout3;

  @NonNull
  public final ImageView ramCheck;

  @NonNull
  public final TextView textView15;

  @NonNull
  public final TextView textView16;

  @NonNull
  public final ImageView touchscreenCheck;

  @NonNull
  public final TextView txtCheckSeries;

  @NonNull
  public final TextView txtComputer;

  @NonNull
  public final TextView txtHardiskCheck;

  @NonNull
  public final TextView txtKeyboardCheck;

  @NonNull
  public final TextView txtLaptop;

  @NonNull
  public final TextView txtRamCheck;

  @NonNull
  public final TextView txtSlowLaptop;

  @NonNull
  public final TextView txtSmartphone;

  @NonNull
  public final TextView txtTouchscreenCheck;

  @NonNull
  public final TextView wlcmUser;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView,
      @NonNull BottomNavigationView bottomNavigationView, @NonNull ImageView checkSeries,
      @NonNull ImageView checkSlowLaptop, @NonNull LinearLayout clickComputer,
      @NonNull LinearLayout clickHardisk, @NonNull LinearLayout clickKeyboard,
      @NonNull LinearLayout clickLaptop, @NonNull LinearLayout clickRam,
      @NonNull LinearLayout clickSeries, @NonNull LinearLayout clickSlow,
      @NonNull LinearLayout clickSmartphone, @NonNull LinearLayout clickTouch,
      @NonNull FrameLayout fragmentContainer, @NonNull ImageView hardiskCheck,
      @NonNull ImageView icLaptop, @NonNull ImageView icSmartphone,
      @NonNull ImageButton imageButton5, @NonNull ImageView imageView4,
      @NonNull ImageView keyboardCheck, @NonNull LinearLayout linearLayout,
      @NonNull LinearLayout linearLayout3, @NonNull ImageView ramCheck,
      @NonNull TextView textView15, @NonNull TextView textView16,
      @NonNull ImageView touchscreenCheck, @NonNull TextView txtCheckSeries,
      @NonNull TextView txtComputer, @NonNull TextView txtHardiskCheck,
      @NonNull TextView txtKeyboardCheck, @NonNull TextView txtLaptop,
      @NonNull TextView txtRamCheck, @NonNull TextView txtSlowLaptop,
      @NonNull TextView txtSmartphone, @NonNull TextView txtTouchscreenCheck,
      @NonNull TextView wlcmUser) {
    this.rootView = rootView;
    this.bottomNavigationView = bottomNavigationView;
    this.checkSeries = checkSeries;
    this.checkSlowLaptop = checkSlowLaptop;
    this.clickComputer = clickComputer;
    this.clickHardisk = clickHardisk;
    this.clickKeyboard = clickKeyboard;
    this.clickLaptop = clickLaptop;
    this.clickRam = clickRam;
    this.clickSeries = clickSeries;
    this.clickSlow = clickSlow;
    this.clickSmartphone = clickSmartphone;
    this.clickTouch = clickTouch;
    this.fragmentContainer = fragmentContainer;
    this.hardiskCheck = hardiskCheck;
    this.icLaptop = icLaptop;
    this.icSmartphone = icSmartphone;
    this.imageButton5 = imageButton5;
    this.imageView4 = imageView4;
    this.keyboardCheck = keyboardCheck;
    this.linearLayout = linearLayout;
    this.linearLayout3 = linearLayout3;
    this.ramCheck = ramCheck;
    this.textView15 = textView15;
    this.textView16 = textView16;
    this.touchscreenCheck = touchscreenCheck;
    this.txtCheckSeries = txtCheckSeries;
    this.txtComputer = txtComputer;
    this.txtHardiskCheck = txtHardiskCheck;
    this.txtKeyboardCheck = txtKeyboardCheck;
    this.txtLaptop = txtLaptop;
    this.txtRamCheck = txtRamCheck;
    this.txtSlowLaptop = txtSlowLaptop;
    this.txtSmartphone = txtSmartphone;
    this.txtTouchscreenCheck = txtTouchscreenCheck;
    this.wlcmUser = wlcmUser;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomNavigationView;
      BottomNavigationView bottomNavigationView = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigationView == null) {
        break missingId;
      }

      id = R.id.check_series;
      ImageView checkSeries = ViewBindings.findChildViewById(rootView, id);
      if (checkSeries == null) {
        break missingId;
      }

      id = R.id.check_slow_laptop;
      ImageView checkSlowLaptop = ViewBindings.findChildViewById(rootView, id);
      if (checkSlowLaptop == null) {
        break missingId;
      }

      id = R.id.click_computer;
      LinearLayout clickComputer = ViewBindings.findChildViewById(rootView, id);
      if (clickComputer == null) {
        break missingId;
      }

      id = R.id.click_hardisk;
      LinearLayout clickHardisk = ViewBindings.findChildViewById(rootView, id);
      if (clickHardisk == null) {
        break missingId;
      }

      id = R.id.click_keyboard;
      LinearLayout clickKeyboard = ViewBindings.findChildViewById(rootView, id);
      if (clickKeyboard == null) {
        break missingId;
      }

      id = R.id.click_laptop;
      LinearLayout clickLaptop = ViewBindings.findChildViewById(rootView, id);
      if (clickLaptop == null) {
        break missingId;
      }

      id = R.id.click_ram;
      LinearLayout clickRam = ViewBindings.findChildViewById(rootView, id);
      if (clickRam == null) {
        break missingId;
      }

      id = R.id.click_series;
      LinearLayout clickSeries = ViewBindings.findChildViewById(rootView, id);
      if (clickSeries == null) {
        break missingId;
      }

      id = R.id.click_slow;
      LinearLayout clickSlow = ViewBindings.findChildViewById(rootView, id);
      if (clickSlow == null) {
        break missingId;
      }

      id = R.id.click_smartphone;
      LinearLayout clickSmartphone = ViewBindings.findChildViewById(rootView, id);
      if (clickSmartphone == null) {
        break missingId;
      }

      id = R.id.click_touch;
      LinearLayout clickTouch = ViewBindings.findChildViewById(rootView, id);
      if (clickTouch == null) {
        break missingId;
      }

      id = R.id.fragment_container;
      FrameLayout fragmentContainer = ViewBindings.findChildViewById(rootView, id);
      if (fragmentContainer == null) {
        break missingId;
      }

      id = R.id.hardisk_check;
      ImageView hardiskCheck = ViewBindings.findChildViewById(rootView, id);
      if (hardiskCheck == null) {
        break missingId;
      }

      id = R.id.ic_laptop;
      ImageView icLaptop = ViewBindings.findChildViewById(rootView, id);
      if (icLaptop == null) {
        break missingId;
      }

      id = R.id.ic_smartphone;
      ImageView icSmartphone = ViewBindings.findChildViewById(rootView, id);
      if (icSmartphone == null) {
        break missingId;
      }

      id = R.id.imageButton5;
      ImageButton imageButton5 = ViewBindings.findChildViewById(rootView, id);
      if (imageButton5 == null) {
        break missingId;
      }

      id = R.id.imageView4;
      ImageView imageView4 = ViewBindings.findChildViewById(rootView, id);
      if (imageView4 == null) {
        break missingId;
      }

      id = R.id.keyboard_check;
      ImageView keyboardCheck = ViewBindings.findChildViewById(rootView, id);
      if (keyboardCheck == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.linearLayout3;
      LinearLayout linearLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout3 == null) {
        break missingId;
      }

      id = R.id.ram_check;
      ImageView ramCheck = ViewBindings.findChildViewById(rootView, id);
      if (ramCheck == null) {
        break missingId;
      }

      id = R.id.textView15;
      TextView textView15 = ViewBindings.findChildViewById(rootView, id);
      if (textView15 == null) {
        break missingId;
      }

      id = R.id.textView16;
      TextView textView16 = ViewBindings.findChildViewById(rootView, id);
      if (textView16 == null) {
        break missingId;
      }

      id = R.id.touchscreen_check;
      ImageView touchscreenCheck = ViewBindings.findChildViewById(rootView, id);
      if (touchscreenCheck == null) {
        break missingId;
      }

      id = R.id.txt_check_series;
      TextView txtCheckSeries = ViewBindings.findChildViewById(rootView, id);
      if (txtCheckSeries == null) {
        break missingId;
      }

      id = R.id.txt_computer;
      TextView txtComputer = ViewBindings.findChildViewById(rootView, id);
      if (txtComputer == null) {
        break missingId;
      }

      id = R.id.txt_hardisk_check;
      TextView txtHardiskCheck = ViewBindings.findChildViewById(rootView, id);
      if (txtHardiskCheck == null) {
        break missingId;
      }

      id = R.id.txt_keyboard_check;
      TextView txtKeyboardCheck = ViewBindings.findChildViewById(rootView, id);
      if (txtKeyboardCheck == null) {
        break missingId;
      }

      id = R.id.txt_laptop;
      TextView txtLaptop = ViewBindings.findChildViewById(rootView, id);
      if (txtLaptop == null) {
        break missingId;
      }

      id = R.id.txt_ram_check;
      TextView txtRamCheck = ViewBindings.findChildViewById(rootView, id);
      if (txtRamCheck == null) {
        break missingId;
      }

      id = R.id.txt_slow_laptop;
      TextView txtSlowLaptop = ViewBindings.findChildViewById(rootView, id);
      if (txtSlowLaptop == null) {
        break missingId;
      }

      id = R.id.txt_smartphone;
      TextView txtSmartphone = ViewBindings.findChildViewById(rootView, id);
      if (txtSmartphone == null) {
        break missingId;
      }

      id = R.id.txt_touchscreen_check;
      TextView txtTouchscreenCheck = ViewBindings.findChildViewById(rootView, id);
      if (txtTouchscreenCheck == null) {
        break missingId;
      }

      id = R.id.wlcm_user;
      TextView wlcmUser = ViewBindings.findChildViewById(rootView, id);
      if (wlcmUser == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, bottomNavigationView, checkSeries,
          checkSlowLaptop, clickComputer, clickHardisk, clickKeyboard, clickLaptop, clickRam,
          clickSeries, clickSlow, clickSmartphone, clickTouch, fragmentContainer, hardiskCheck,
          icLaptop, icSmartphone, imageButton5, imageView4, keyboardCheck, linearLayout,
          linearLayout3, ramCheck, textView15, textView16, touchscreenCheck, txtCheckSeries,
          txtComputer, txtHardiskCheck, txtKeyboardCheck, txtLaptop, txtRamCheck, txtSlowLaptop,
          txtSmartphone, txtTouchscreenCheck, wlcmUser);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
