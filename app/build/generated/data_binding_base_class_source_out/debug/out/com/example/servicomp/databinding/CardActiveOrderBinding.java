// Generated by view binder compiler. Do not edit!
package com.example.servicomp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.servicomp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardActiveOrderBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView ActiveOrderMerk;

  @NonNull
  public final LinearLayout ProgressPengantaran;

  @NonNull
  public final LinearLayout ProgressPenjemputan;

  @NonNull
  public final LinearLayout ProgressReview;

  @NonNull
  public final LinearLayout ProgressSelesai;

  @NonNull
  public final LinearLayout ProgressService;

  @NonNull
  public final ImageView icChecklistActiveOrder;

  @NonNull
  public final ImageView icPengantaranActiveOrder;

  @NonNull
  public final ImageView icPenjemputanActiveOrder;

  @NonNull
  public final ImageView icPerbaikanActiveOrder;

  @NonNull
  public final ImageView icReviewActiveOrder;

  @NonNull
  public final LinearLayout linearLayoutActiveOrder;

  private CardActiveOrderBinding(@NonNull CardView rootView, @NonNull TextView ActiveOrderMerk,
      @NonNull LinearLayout ProgressPengantaran, @NonNull LinearLayout ProgressPenjemputan,
      @NonNull LinearLayout ProgressReview, @NonNull LinearLayout ProgressSelesai,
      @NonNull LinearLayout ProgressService, @NonNull ImageView icChecklistActiveOrder,
      @NonNull ImageView icPengantaranActiveOrder, @NonNull ImageView icPenjemputanActiveOrder,
      @NonNull ImageView icPerbaikanActiveOrder, @NonNull ImageView icReviewActiveOrder,
      @NonNull LinearLayout linearLayoutActiveOrder) {
    this.rootView = rootView;
    this.ActiveOrderMerk = ActiveOrderMerk;
    this.ProgressPengantaran = ProgressPengantaran;
    this.ProgressPenjemputan = ProgressPenjemputan;
    this.ProgressReview = ProgressReview;
    this.ProgressSelesai = ProgressSelesai;
    this.ProgressService = ProgressService;
    this.icChecklistActiveOrder = icChecklistActiveOrder;
    this.icPengantaranActiveOrder = icPengantaranActiveOrder;
    this.icPenjemputanActiveOrder = icPenjemputanActiveOrder;
    this.icPerbaikanActiveOrder = icPerbaikanActiveOrder;
    this.icReviewActiveOrder = icReviewActiveOrder;
    this.linearLayoutActiveOrder = linearLayoutActiveOrder;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CardActiveOrderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardActiveOrderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.card_active_order, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardActiveOrderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ActiveOrder_Merk;
      TextView ActiveOrderMerk = ViewBindings.findChildViewById(rootView, id);
      if (ActiveOrderMerk == null) {
        break missingId;
      }

      id = R.id.Progress_Pengantaran;
      LinearLayout ProgressPengantaran = ViewBindings.findChildViewById(rootView, id);
      if (ProgressPengantaran == null) {
        break missingId;
      }

      id = R.id.Progress_penjemputan;
      LinearLayout ProgressPenjemputan = ViewBindings.findChildViewById(rootView, id);
      if (ProgressPenjemputan == null) {
        break missingId;
      }

      id = R.id.Progress_review;
      LinearLayout ProgressReview = ViewBindings.findChildViewById(rootView, id);
      if (ProgressReview == null) {
        break missingId;
      }

      id = R.id.Progress_Selesai;
      LinearLayout ProgressSelesai = ViewBindings.findChildViewById(rootView, id);
      if (ProgressSelesai == null) {
        break missingId;
      }

      id = R.id.Progress_Service;
      LinearLayout ProgressService = ViewBindings.findChildViewById(rootView, id);
      if (ProgressService == null) {
        break missingId;
      }

      id = R.id.ic_checklist_ActiveOrder;
      ImageView icChecklistActiveOrder = ViewBindings.findChildViewById(rootView, id);
      if (icChecklistActiveOrder == null) {
        break missingId;
      }

      id = R.id.ic_pengantaran_ActiveOrder;
      ImageView icPengantaranActiveOrder = ViewBindings.findChildViewById(rootView, id);
      if (icPengantaranActiveOrder == null) {
        break missingId;
      }

      id = R.id.ic_penjemputan_ActiveOrder;
      ImageView icPenjemputanActiveOrder = ViewBindings.findChildViewById(rootView, id);
      if (icPenjemputanActiveOrder == null) {
        break missingId;
      }

      id = R.id.ic_perbaikan_ActiveOrder;
      ImageView icPerbaikanActiveOrder = ViewBindings.findChildViewById(rootView, id);
      if (icPerbaikanActiveOrder == null) {
        break missingId;
      }

      id = R.id.ic_review_ActiveOrder;
      ImageView icReviewActiveOrder = ViewBindings.findChildViewById(rootView, id);
      if (icReviewActiveOrder == null) {
        break missingId;
      }

      id = R.id.linearLayout_ActiveOrder;
      LinearLayout linearLayoutActiveOrder = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutActiveOrder == null) {
        break missingId;
      }

      return new CardActiveOrderBinding((CardView) rootView, ActiveOrderMerk, ProgressPengantaran,
          ProgressPenjemputan, ProgressReview, ProgressSelesai, ProgressService,
          icChecklistActiveOrder, icPengantaranActiveOrder, icPenjemputanActiveOrder,
          icPerbaikanActiveOrder, icReviewActiveOrder, linearLayoutActiveOrder);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
