// Generated by view binder compiler. Do not edit!
package com.example.servicomp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.servicomp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardTransactionHistoryBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView HargaHistory;

  @NonNull
  public final TextView HistoryMerk;

  @NonNull
  public final TextView TglOrderHistory;

  @NonNull
  public final TextView TxtKerusakanMerk;

  private CardTransactionHistoryBinding(@NonNull CardView rootView, @NonNull TextView HargaHistory,
      @NonNull TextView HistoryMerk, @NonNull TextView TglOrderHistory,
      @NonNull TextView TxtKerusakanMerk) {
    this.rootView = rootView;
    this.HargaHistory = HargaHistory;
    this.HistoryMerk = HistoryMerk;
    this.TglOrderHistory = TglOrderHistory;
    this.TxtKerusakanMerk = TxtKerusakanMerk;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CardTransactionHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardTransactionHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.card_transaction_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardTransactionHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.HargaHistory;
      TextView HargaHistory = ViewBindings.findChildViewById(rootView, id);
      if (HargaHistory == null) {
        break missingId;
      }

      id = R.id.HistoryMerk;
      TextView HistoryMerk = ViewBindings.findChildViewById(rootView, id);
      if (HistoryMerk == null) {
        break missingId;
      }

      id = R.id.TglOrderHistory;
      TextView TglOrderHistory = ViewBindings.findChildViewById(rootView, id);
      if (TglOrderHistory == null) {
        break missingId;
      }

      id = R.id.TxtKerusakanMerk;
      TextView TxtKerusakanMerk = ViewBindings.findChildViewById(rootView, id);
      if (TxtKerusakanMerk == null) {
        break missingId;
      }

      return new CardTransactionHistoryBinding((CardView) rootView, HargaHistory, HistoryMerk,
          TglOrderHistory, TxtKerusakanMerk);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
